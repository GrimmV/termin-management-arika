{"version":3,"sources":["BookingConfirmation.js","BookingRequest.js","ConfirmationModal.js","ListItemComponent.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["style","position","display","top","left","transform","maxWidth","bgcolor","p","xs","sm","BookingConfirmation","props","Paper","sx","Typography","align","nick","date","Button","marginTop","variant","onClick","handleClose","minWidth","BookingRequest","useState","userIdentifier","setUserIdentifier","anchorEl","setAnchorEl","popoverOpen","Boolean","popoverId","undefined","marginBottom","fontWeight","TextField","value","onChange","e","target","length","confirmBooking","currentTarget","Popover","id","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","color","ConfirmationModal","bookingConfirmed","setBookingConfirmed","submittedIdentifier","setSubmittedIdentifier","identifier","monthMapping","ListItemComponent","setOpen","formatDate","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","elevation","padding","ListItem","ListItemText","marginRight","termin","size","Date","parse","Modal","dummy_data","geschlosseneTermine","Main","offeneTermine","setOffeneTermine","useEffect","data","terminKey","checkIfTerminOffen","push","offenerTerminKey","alignItems","justifyContent","margin","List","items","createListItems","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33798f7c.chunk.js","sourcesContent":["import { Typography, Paper, Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    display: \"grid\",\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    maxWidth: 400,\r\n    bgcolor: 'background.paper',\r\n    p: {\r\n        xs: 1,\r\n        sm: 2,\r\n    }\r\n};\r\n\r\nexport default function BookingConfirmation(props) {\r\n    return(\r\n        <Paper sx={style}>\r\n            <Typography align=\"center\">\r\n                Vielen Dank {props.nick}!\r\n            </Typography>\r\n            <Typography align=\"center\">\r\n                Du bist jetzt für den {props.date} gebucht.\r\n            </Typography>\r\n            <Button\r\n                sx={{marginTop: 2}}\r\n                variant=\"contained\" onClick={props.handleClose}>Verstanden</Button>\r\n        </Paper>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport { TextField, Typography, Paper, Button, Popover } from '@mui/material';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    display: \"grid\",\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    minWidth: {\r\n        xs: \"80%\",\r\n        sm: \"0\"\r\n    },\r\n    maxWidth: 400,\r\n    bgcolor: 'background.paper',\r\n    p: {\r\n        xs: 1,\r\n        sm: 2,\r\n    }\r\n};\r\n\r\nexport default function BookingRequest(props) {\r\n    \r\n    const [userIdentifier, setUserIdentifier] = useState(\"\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popoverOpen = Boolean(anchorEl);\r\n    const popoverId = popoverOpen ? 'simple-popover' : undefined;\r\n\r\n    const handleClosePopover = e => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleBooking = (e) => {\r\n        if (userIdentifier.length > 2)\r\n            props.confirmBooking(userIdentifier);\r\n        else {\r\n            setAnchorEl(e.currentTarget);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Paper sx={style}>\r\n            <Typography align=\"center\">Ausgewähltes Datum: </Typography>\r\n            <Typography align=\"center\" sx={{marginBottom: 2, fontWeight: \"500\"}}>{props.date}</Typography>\r\n            <Typography align=\"center\"\r\n                sx={{marginBottom: 2}}\r\n            >Bitte gib einen (fiktiven) Namen zur Buchung an, um dich damit identifizieren zu können</Typography>\r\n            <TextField value={userIdentifier} onChange={e => setUserIdentifier(e.target.value)} />\r\n            <Button onClick={handleBooking} variant=\"contained\"\r\n                sx={{\r\n                    marginTop: 2\r\n                }}\r\n            >Buchung abschließen</Button>\r\n            <Popover\r\n                id={popoverId}\r\n                open={popoverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClosePopover}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\"\r\n                }}\r\n            >\r\n                <Typography align=\"center\" sx={{p: 2}}>Der Name muss mindestens 3 Zeichen lang sein</Typography>\r\n            </Popover>\r\n            <Button onClick={props.handleClose} variant=\"contained\" color=\"error\"\r\n                sx={{\r\n                    marginTop: 2\r\n                }}\r\n            >Zurück</Button>\r\n        </Paper>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport BookingConfirmation from './BookingConfirmation';\r\nimport BookingRequest from './BookingRequest';\r\n\r\n\r\nexport default function ConfirmationModal(props) {\r\n\r\n    const [bookingConfirmed, setBookingConfirmed] = useState(false);\r\n    const [submittedIdentifier, setSubmittedIdentifier] = useState(\"\");\r\n\r\n    const confirmBooking = (identifier) => {\r\n        setBookingConfirmed(true);\r\n        setSubmittedIdentifier(identifier);\r\n    }\r\n\r\n    return(\r\n        bookingConfirmed\r\n        ? <BookingConfirmation handleClose={props.handleClose} nick={submittedIdentifier} date={props.date}/>\r\n        : <BookingRequest date={props.date} confirmBooking={confirmBooking} handleClose={props.handleClose}/>\r\n    )\r\n\r\n}","import { Paper, ListItem, ListItemText, Button, Modal } from '@mui/material';\r\nimport React, {useState} from 'react';\r\nimport ConfirmationModal from './ConfirmationModal';\r\n\r\nconst monthMapping = [\r\n    \"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\",\r\n    \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"\r\n]\r\n\r\nexport default function ListItemComponent(props) {\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const formatDate = (date) => {\r\n        return(\r\n            date.getDate().toString().padStart(2, \"0\") + \". \" + \r\n            monthMapping[date.getMonth()] + \" \" + \r\n            date.getFullYear() + \" \" + \r\n            date.getHours().toString().padStart(2, \"0\") + \":\" + \r\n            date.getMinutes().toString().padStart(2, \"0\") + \" Uhr\"\r\n        )\r\n    }\r\n\r\n    const handleBooking = () => {\r\n        handleOpen();\r\n    }\r\n    \r\n    return(\r\n        <Paper\r\n            elevation={4}\r\n            sx={{\r\n                marginBottom: 2,\r\n                padding: 1\r\n            }}\r\n        >\r\n            <ListItem key={Date.parse(props.termin)}>\r\n                <ListItemText\r\n                    sx={{marginRight: 1}}\r\n                >\r\n                    {formatDate(props.termin)}\r\n                </ListItemText>\r\n                <Button onClick={handleBooking} variant=\"contained\"  size=\"small\">Buchen</Button>\r\n            </ListItem>\r\n            \r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <ConfirmationModal handleClose={handleClose} date={formatDate(props.termin)}/>\r\n            </Modal>\r\n        </Paper>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {Paper, List, Typography} from '@mui/material';\r\nimport ListItemComponent from './ListItemComponent';\r\n\r\nconst dummy_data = {\r\n    \"moeglicheTermine\": {\r\n        \"Mp6FK5n9nBaE5OheNTy\":{\"datum\":\"2021-11-27T12:00:00\"},\r\n        \"Mp6FK5nAoCbF6PifOUy\":{\"datum\":\"2021-11-27T13:00:00\"},\r\n        \"Mp6FK5nBpDcG7QjgPVy\":{\"datum\":\"2021-11-27T14:00:00\"},\r\n        \"Mp6FK5nCqEdH8RkhQWy\":{\"datum\":\"2021-11-27T15:00:00\"},\r\n        \"Mp6FK5nDrFeI9SliRXy\":{\"datum\":\"2021-11-27T16:00:00\"},\r\n        \"Mp6FK5nEsGfJATmjSYy\":{\"datum\":\"2021-11-27T17:00:00\"},\r\n        \"Mp6FK5nFtHgKBUnkTZy\":{\"datum\":\"2021-11-27T18:00:00\"}\r\n    },\r\n    geschlosseneTermine: {\r\n        \"Mp6eqwdawq\": {\"terminId\": \"Mp6FK5n9nBaE5OheNTy\"},\r\n        \"Mp6eqwdawsdq\": {\"terminId\": \"Mp6FK5nBpDcG7QjgPVy\"}\r\n    }\r\n}\r\n\r\n\r\nexport default function Main() {\r\n\r\n    const [offeneTermine, setOffeneTermine] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let data = []\r\n        for (let terminKey in dummy_data[\"moeglicheTermine\"]) {\r\n            if (checkIfTerminOffen(terminKey, dummy_data[\"geschlosseneTermine\"])) {\r\n                data.push(new Date(dummy_data[\"moeglicheTermine\"][terminKey][\"datum\"]))\r\n            }\r\n        }\r\n        setOffeneTermine(data);\r\n    }, [])\r\n\r\n    const checkIfTerminOffen = (offenerTerminKey, geschlosseneTermine) => {\r\n        for (let terminKey in geschlosseneTermine) {\r\n            if (geschlosseneTermine[terminKey][\"terminId\"] === offenerTerminKey) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const createListItems = () => {\r\n        const items = [];\r\n        for (let termin of offeneTermine) {\r\n            items.push(\r\n                <ListItemComponent key={Date.parse(termin)} termin={termin}/>\r\n            )\r\n        }\r\n        return items;\r\n    }\r\n\r\n    return(\r\n        <Paper elevation={0}>\r\n            <Typography variant=\"h3\">Terminbuchung für Hololens Testcase</Typography>\r\n            <Typography>\r\n                Vielen Dank für das Interesse an unserer Evaluation mit der Hololens. \r\n                Bitte bucht unten einen Termin, an dem ihr Zeit habt und an der Evaluation teilnehmen könnt.\r\n            </Typography>\r\n            <Paper\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    margin: 2\r\n                }}\r\n            >\r\n            <List\r\n                sx={{display: \"block\"}}\r\n            >\r\n                {createListItems()}\r\n            </List>\r\n            </Paper>\r\n        </Paper>\r\n    )\r\n}","import './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\"\n      style={{margin: \"1rem\"}}\n    >\n        <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}