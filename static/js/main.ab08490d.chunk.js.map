{"version":3,"sources":["BookingConfirmation.js","BookingRequest.js","fetching.js","ConfirmationModal.js","ListItemComponent.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["style","position","display","top","left","transform","maxWidth","bgcolor","p","xs","sm","BookingConfirmation","props","bookingConfirmed","Paper","sx","Typography","align","nick","date","Button","marginTop","variant","onClick","handleClose","minWidth","BookingRequest","useState","userIdentifier","setUserIdentifier","anchorEl","setAnchorEl","popoverOpen","Boolean","popoverId","undefined","marginBottom","fontWeight","TextField","value","onChange","e","target","disabled","processingRequest","length","confirmBooking","currentTarget","Popover","id","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","color","base_url","getMoeglicheTermine","myHeaders","Headers","append","fetch","method","headers","redirect","then","response","json","getGeschlosseneTermine","saveGeschlosseneTermine","timeId","requestOptions1","body","JSON","stringify","saveNutzer","nutzer","requestOptions","checkIfTerminVergeben","console","log","Error","ConfirmationModal","bookingRequested","setBookingRequested","setBookingConfirmed","setProcessingRequest","submittedIdentifier","setSubmittedIdentifier","identifier","termin_id","terminVergeben","catch","error","monthMapping","ListItemComponent","setOpen","resetOffeneTermine","formatDate","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","elevation","padding","ListItem","ListItemText","marginRight","termin","size","Date","parse","Modal","Main","offeneTermine","setOffeneTermine","useEffect","moeglicheTermine","geschlosseneTermine","mTermin","geschlossen","gTermin","margin","alignItems","justifyContent","List","items","terminKey","push","createListItems","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab08490d.chunk.js","sourcesContent":["import { Typography, Paper, Button } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    display: \"grid\",\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    maxWidth: 400,\r\n    bgcolor: 'background.paper',\r\n    p: {\r\n        xs: 1,\r\n        sm: 2,\r\n    }\r\n};\r\n\r\nexport default function BookingConfirmation(props) {\r\n    if (props.bookingConfirmed) {\r\n        return(\r\n            <Paper sx={style}>\r\n                <Typography align=\"center\">\r\n                    Vielen Dank {props.nick}!\r\n                </Typography>\r\n                <Typography align=\"center\">\r\n                    Du bist jetzt für den {props.date} gebucht.\r\n                </Typography>\r\n                <Button\r\n                    sx={{marginTop: 2}}\r\n                    variant=\"contained\" onClick={props.handleClose}\r\n                >Verstanden\r\n                </Button>\r\n            </Paper>\r\n        )\r\n    } else {\r\n        return(\r\n            <Paper sx={style}>\r\n                <Typography align=\"center\">\r\n                    Upps, das tut uns leid {props.nick}!\r\n                </Typography>\r\n                <Typography align=\"center\">\r\n                    Leider ist der Termin mitlerweile nicht mehr verfügbar.\r\n                </Typography>\r\n                <Button\r\n                    sx={{marginTop: 2}}\r\n                    variant=\"contained\" onClick={props.handleClose}>Zu den Terminen\r\n                    </Button>\r\n            </Paper>\r\n        )\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport { TextField, Typography, Paper, Button, Popover } from '@mui/material';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    display: \"grid\",\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    minWidth: {\r\n        xs: \"80%\",\r\n        sm: \"0\"\r\n    },\r\n    maxWidth: 400,\r\n    bgcolor: 'background.paper',\r\n    p: {\r\n        xs: 1,\r\n        sm: 2,\r\n    }\r\n};\r\n\r\nexport default function BookingRequest(props) {\r\n    \r\n    const [userIdentifier, setUserIdentifier] = useState(\"\");\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const popoverOpen = Boolean(anchorEl);\r\n    const popoverId = popoverOpen ? 'simple-popover' : undefined;\r\n\r\n    const handleClosePopover = e => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleBooking = (e) => {\r\n        if (userIdentifier.length > 2)\r\n            props.confirmBooking(userIdentifier);\r\n        else {\r\n            setAnchorEl(e.currentTarget);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Paper sx={style}>\r\n            <Typography align=\"center\">Ausgewähltes Datum: </Typography>\r\n            <Typography align=\"center\" sx={{marginBottom: 2, fontWeight: \"500\"}}>{props.date}</Typography>\r\n            <Typography align=\"center\"\r\n                sx={{marginBottom: 2}}\r\n            >Bitte gib einen (fiktiven) Namen zur Buchung an, um dich damit identifizieren zu können</Typography>\r\n            <TextField value={userIdentifier} onChange={e => setUserIdentifier(e.target.value)} />\r\n            <Button disabled={props.processingRequest} onClick={handleBooking} variant=\"contained\"\r\n                sx={{\r\n                    marginTop: 2\r\n                }}\r\n            >Buchung abschließen</Button>\r\n            <Popover\r\n                id={popoverId}\r\n                open={popoverOpen}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClosePopover}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\"\r\n                }}\r\n            >\r\n                <Typography align=\"center\" sx={{p: 2}}>Der Name muss mindestens 3 Zeichen lang sein</Typography>\r\n            </Popover>\r\n            <Button onClick={props.handleClose} variant=\"contained\" color=\"error\"\r\n                sx={{\r\n                    marginTop: 2\r\n                }}\r\n            >Zurück</Button>\r\n        </Paper>\r\n    )\r\n}","\r\nconst base_url = \"https://termin-management-default-rtdb.europe-west1.firebasedatabase.app/\"\r\n\r\nexport const getPossibleTimes = () => {\r\n    \r\n    return getMoeglicheTermine().then(\r\n        moeglicheTermine => {\r\n            return getGeschlosseneTermine().then(\r\n                geschlosseneTermine => {\r\n                    let offeneTermine = {};\r\n                    for (let mTermin in moeglicheTermine) {\r\n                        let geschlossen = false;\r\n                        for (let gTermin in geschlosseneTermine) {\r\n                            if (mTermin === geschlosseneTermine[gTermin][\"timeId\"]) {\r\n                                geschlossen = true;\r\n                            }\r\n                        }\r\n                        if (!geschlossen) {\r\n                            offeneTermine[mTermin] = JSON.parse(JSON.stringify(moeglicheTermine[mTermin][\"datum\"]));\r\n                        }\r\n                    }\r\n                    return offeneTermine;\r\n                }\r\n            )\r\n        }\r\n    )\r\n}\r\n\r\nconst getMoeglicheTermine = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Accept\", \"application/json\");\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(base_url + \"moeglicheTermine.json\", requestOptions)\r\n    .then(response => response.json())\r\n}\r\n\r\nconst getGeschlosseneTermine = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Accept\", \"application/json\");\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(base_url + \"geschlosseneTermine.json\", requestOptions)\r\n    .then(response => response.json())\r\n}\r\n\r\nexport const reserveTime = (timeId, nutzer) => {\r\n\r\n    return checkIfTerminVergeben(timeId)\r\n    .then(terminVergeben => {\r\n        if (!terminVergeben) saveGeschlosseneTermine(timeId)\r\n    })\r\n    .then(() => saveNutzer(timeId, nutzer));\r\n}\r\n\r\nconst saveGeschlosseneTermine = (timeId) => {\r\n    \r\n    var requestOptions1 = {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n                \"timeId\": timeId\r\n        }),\r\n        redirect: 'follow'\r\n    };\r\n\r\n    return fetch(base_url + \"geschlosseneTermine.json\", requestOptions1)\r\n    .then(response => {return response.json()})\r\n}\r\n\r\nconst saveNutzer = (timeId, nutzer) => {\r\n\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"timeId\": timeId,\r\n            \"nutzer\": nutzer\r\n        }),\r\n        redirect: 'follow'\r\n        };\r\n\r\n    return fetch(base_url + \"nutzer.json\", requestOptions)\r\n        .then(response => {\r\n            return response.json();\r\n    })\r\n}\r\n\r\nconst checkIfTerminVergeben = (timeId) => {\r\n\r\n    return fetch(base_url + \"geschlosseneTermine.json\").then(\r\n        response => {\r\n            console.log(response);\r\n            if (response !== null) {\r\n                return response.json();\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    ).then(response => {\r\n        console.log(response);\r\n        for (let value in response) {\r\n            if (timeId === response[value][\"timeId\"]){\r\n                throw Error(\"Termin nicht verfügbar\");}\r\n        }\r\n        return false;\r\n    })\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport BookingConfirmation from './BookingConfirmation';\r\nimport BookingRequest from './BookingRequest';\r\nimport { reserveTime } from './fetching';\r\n\r\n\r\nexport default function ConfirmationModal(props) {\r\n\r\n    const [bookingRequested, setBookingRequested] = useState(false);\r\n    const [bookingConfirmed, setBookingConfirmed] = useState(false);\r\n    const [processingRequest, setProcessingRequest] = useState(false);\r\n    const [submittedIdentifier, setSubmittedIdentifier] = useState(\"\");\r\n\r\n    const confirmBooking = (identifier) => {\r\n\r\n        setProcessingRequest(true);\r\n        \r\n        reserveTime(props.termin_id, identifier).then(response => {\r\n            setBookingRequested(true);\r\n            setSubmittedIdentifier(identifier);\r\n            setBookingConfirmed(true);\r\n            setProcessingRequest(false);\r\n        }).catch(\r\n            error => {\r\n                setBookingConfirmed(false);\r\n                setBookingRequested(true);\r\n                setProcessingRequest(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return(\r\n        bookingRequested\r\n        ? <BookingConfirmation handleClose={props.handleClose} nick={submittedIdentifier} date={props.date}\r\n            bookingConfirmed={bookingConfirmed}\r\n        />\r\n        : <BookingRequest date={props.date} confirmBooking={confirmBooking} handleClose={props.handleClose} \r\n                            processingRequest={processingRequest}\r\n        />\r\n    )\r\n\r\n}","import { Paper, ListItem, ListItemText, Button, Modal } from '@mui/material';\r\nimport React, {useState} from 'react';\r\nimport ConfirmationModal from './ConfirmationModal';\r\n\r\nconst monthMapping = [\r\n    \"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\",\r\n    \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"\r\n]\r\n\r\nexport default function ListItemComponent(props) {\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => {\r\n        props.resetOffeneTermine();\r\n        setOpen(false);\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n        return(\r\n            date.getDate().toString().padStart(2, \"0\") + \". \" + \r\n            monthMapping[date.getMonth()] + \" \" + \r\n            date.getFullYear() + \" \" + \r\n            date.getHours().toString().padStart(2, \"0\") + \":\" + \r\n            date.getMinutes().toString().padStart(2, \"0\") + \" Uhr\"\r\n        )\r\n    }\r\n\r\n    const handleBooking = () => {\r\n        handleOpen();\r\n    }\r\n    \r\n    return(\r\n        <Paper\r\n            elevation={4}\r\n            sx={{\r\n                marginBottom: 2,\r\n                padding: 1\r\n            }}\r\n        >\r\n            <ListItem key={Date.parse(props.termin)}>\r\n                <ListItemText\r\n                    sx={{marginRight: 1}}\r\n                >\r\n                    {formatDate(props.termin)}\r\n                </ListItemText>\r\n                <Button onClick={handleBooking} variant=\"contained\"  size=\"small\">Buchen</Button>\r\n            </ListItem>\r\n            \r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <ConfirmationModal handleClose={handleClose} date={formatDate(props.termin)} termin_id={props.termin_id}/>\r\n            </Modal>\r\n        </Paper>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {Paper, List, Typography} from '@mui/material';\r\nimport ListItemComponent from './ListItemComponent';\r\nimport { getPossibleTimes } from './fetching';\r\n\r\n\r\nexport default function Main() {\r\n\r\n    const [offeneTermine, setOffeneTermine] = useState({});\r\n\r\n    useEffect(() => {\r\n        resetOffeneTermine();\r\n    }, [])\r\n\r\n    const resetOffeneTermine = () => {\r\n        getPossibleTimes().then(response => {\r\n            setOffeneTermine(response);\r\n        })\r\n    }\r\n\r\n    const createListItems = () => {\r\n        const items = [];\r\n        for (let terminKey in offeneTermine) {\r\n            items.push(\r\n                <ListItemComponent key={terminKey} termin={new Date(offeneTermine[terminKey])} termin_id={terminKey}\r\n                    resetOffeneTermine={resetOffeneTermine}\r\n                />\r\n            )\r\n        }\r\n        return items;\r\n    }\r\n\r\n    return(\r\n        <Paper elevation={0}>\r\n            <Typography variant=\"h3\">Terminbuchung für Hololens Testcase</Typography>\r\n            <Typography sx={{margin: 2}}>\r\n                Vielen Dank für das Interesse an unserer Evaluation mit der Hololens. \r\n                Bitte bucht unten einen Termin, an dem ihr Zeit habt, um an der Evaluation teilzunehmen.\r\n            </Typography>\r\n            <Paper\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    margin: 2\r\n                }}\r\n            >\r\n            <List\r\n                sx={{display: \"block\"}}\r\n            >\r\n                {createListItems()}\r\n            </List>\r\n            </Paper>\r\n        </Paper>\r\n    )\r\n}","import './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\"\n      style={{margin: \"1rem\"}}\n    >\n        <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}